{"version":3,"file":"static/js/61.c0cb92b5.chunk.js","mappings":"2MACA,EAA+B,kCAA/B,EAAsF,wCAAtF,EAAmJ,wCAAnJ,EAAiN,yC,SCiDjN,EA7CoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAqBC,SAbnB,SAAAC,GACnBA,EAAMC,iBACN,IAEMC,EAAW,CACfC,KAHWH,EAAMI,cAAcC,SAASF,KAAKG,MAI7CC,OAHaP,EAAMI,cAAcC,SAASE,OAAOD,OAKnDX,GAASa,EAAAA,EAAAA,IAAWN,IACpBF,EAAMI,cAAcK,OACrB,EAGC,WACE,mBAAOZ,UAAWC,EAAlB,UAA6C,QAE3C,kBACED,UAAWC,EACXY,KAAK,OACLP,KAAK,OACLQ,QAAQ,2HACRC,MAAM,+IAIV,mBAAOf,UAAWC,EAAlB,UAA6C,UAE3C,kBACED,UAAWC,EACXY,KAAK,MACLP,KAAK,SACLQ,QAAQ,qGACRC,MAAM,qGAGV,mBAAQf,UAAWC,EAA4BY,KAAK,SAApD,SAA6D,kBAKlE,E,8BC/CD,EAA+B,kCAA/B,EAAqF,uCAArF,EAAkJ,yCC0DlJ,EA/CoB,WAClB,IAAMf,GAAWC,EAAAA,EAAAA,MAEXiB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,IAEJ,IAOM6B,EAPmB,WACvB,IAAMC,EAAmBZ,EAAOa,cAAcC,OAC9C,OAAOX,EAASH,QAAO,qBAAGV,KACnBuB,cAAcE,SAASH,EADP,GAGxB,CAEsBI,GAEjBC,EAAkBC,MAAMC,QAAQhB,IAAaA,EAASiB,OAAS,EAErE,OACE,gBAAIpC,UAAWC,EAAf,UACGoB,IAAa,SAACgB,EAAA,EAAD,IACbd,IAAS,uBAAIA,IACbU,GACCN,EAAeW,KAAI,YAA2B,IAAxBhC,EAAuB,EAAvBA,KAAMI,EAAiB,EAAjBA,OAAQ6B,EAAS,EAATA,GAClC,OACE,gBAAIvC,UAAWC,EAAf,UACGK,EAAK,KAAGI,GACT,0BACE,mBACEV,UAAWC,EACXuC,QAAS,kBAAM1C,GAAS2C,EAAAA,EAAAA,IAAcF,GAA7B,EAFX,SAGC,eANyCA,EAYjD,MAGR,E,UCxDD,EAA+B,6BC0B/B,EApBe,WACb,IAAMvB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBpB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,kBACEC,UAAWC,EACXY,KAAK,OACL6B,YAAY,iBACZjC,MAAOO,EACP2B,SAVmB,SAAAC,GACrB9C,GAAS+C,EAAAA,EAAAA,GAAUD,EAAEE,OAAOrC,OAC7B,GAWF,E,UCED,EAlBqB,WACnB,IAAMY,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE9B,OACE,0BACE,iBAAKtB,UAAWC,EAAAA,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,EAAAA,MAAf,SAA0B,eAC1B,SAAC,EAAD,KAEA,eAAID,UAAWC,EAAAA,EAAAA,MAAf,SAA0B,cAC1B,SAAC,EAAD,IACCoB,IAAa,SAACgB,EAAA,EAAD,MAAc,uBAAG,4BAC/B,SAAC,EAAD,QAIP,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact-form\":\"ContactForm_contact-form__1+2ej\",\"contact-form-label\":\"ContactForm_contact-form-label__Jn-Uy\",\"contact-form-input\":\"ContactForm_contact-form-input__TVALc\",\"contact-form-button\":\"ContactForm_contact-form-button__HJUUm\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.currentTarget.elements.name.value;\n    const number = event.currentTarget.elements.number.value;\n    const formData = {\n      name,\n      number,\n    };\n    dispatch(addContact(formData));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <form className={css['contact-form']} onSubmit={handleSubmit}>\n      <label className={css['contact-form-label']}>\n        Name\n        <input\n          className={css['contact-form-input']}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </label>\n\n      <label className={css['contact-form-label']}>\n        Number\n        <input\n          className={css['contact-form-input']}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </label>\n      <button className={css['contact-form-button']} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-list\":\"ContactList_contact-list__GnW-D\",\"contact-list-item\":\"ContactList_contact-list-item__lrLiS\",\"contact-list-button\":\"ContactList_contact-list-button__X3OtI\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n  selectFilter,\n} from 'redux/selectors';\nimport { deleteContact, requestContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  const getFilterContact = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const searchContacts = getFilterContact();\n\n  const visibleContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <ul className={css['contact-list']}>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {visibleContacts &&\n        searchContacts.map(({ name, number, id }) => {\n          return (\n            <li className={css['contact-list-item']} key={id}>\n              {name}: {number}\n              <div>\n                <button\n                  className={css['contact-list-button']}\n                  onClick={() => dispatch(deleteContact(id))}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter-input\":\"Filter_filter-input__dFgnI\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <input\n      className={css['filter-input']}\n      type=\"text\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={onFilterChange}\n    />\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nimport { useSelector } from 'react-redux';\nimport { selectContactsIsLoading } from 'redux/selectors';\nimport Loader from 'components/Loader';\nimport css from '../components/App/App.module.css';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectContactsIsLoading);\n\n  return (\n    <div>\n      <div className={css.container}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        {isLoading && <Loader /> && <b>Request in progress...</b>}\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","className","css","onSubmit","event","preventDefault","formData","name","currentTarget","elements","value","number","addContact","reset","type","pattern","title","filter","useSelector","selectFilter","contacts","selectContacts","isLoading","selectContactsIsLoading","error","selectContactsError","useEffect","requestContacts","searchContacts","normalizedFilter","toLowerCase","trim","includes","getFilterContact","visibleContacts","Array","isArray","length","Loader","map","id","onClick","deleteContact","placeholder","onChange","e","setFilter","target"],"sourceRoot":""}